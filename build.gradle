buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "MavenRepo"
            url = "https://repo.maven.apache.org/maven2"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.gt.version}"
group= "gregtech"
archivesBaseName = "gregtech"


sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "eclipse"
}

idea { module { inheritOutputDirs = true } }

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {}

dependencies {

    compile files("libs/CoFHCore-[1.7.10]3.0.3-303-dev.jar")
    compile files("libs/CoFHLib-[1.7.10]1.0.3-175-dev.jar")
    compile files("libs/CodeChickenCore-1.7.10-1.0.3.23-dev.jar")
    compile files("libs/ForgeMultipart-1.7.10-1.2.0.345-universal.jar")
    compile files("libs/GT Scanner Mod-1.5.4.jar")
    compile files("libs/GalacticraftCore-Dev-1.7-3.0.12.504.jar")
    compile files("libs/IC2NuclearControl-2.4.4a.jar")
    compile files("libs/ImmersiveEngineering-0.7.7-deobf.jar")
    compile files("libs/MicdoodleCore-Dev-1.7-3.0.12.504.jar")
    compile files("libs/NotEnoughItems1.7.10-1.0.5.111.jar")
    compile files("libs/Railcraft_1.7.10-9.12.3.0-unofficial-dev.jar")
    compile files("libs/Translocator-1.7.10-1.1.2.16-dev.jar")
    compile files("libs/appliedenergistics2-rv2-beta-33-dev.jar")
    compile files("libs/magneticraft-0.6.1-final.jar")
    compile files("libs/buildcraft-7.1.17-builders.jar")
    compile files("libs/buildcraft-7.1.17-core.jar")
    compile files("libs/buildcraft-7.1.17-silicon.jar")
    compile files("libs/buildcraft-7.1.17-transport.jar")
    compile files("libs/buildcraft-compat-7.1.5.jar")
    compile files("libs/EnderCore-1.7.10-0.2.0.36_beta.jar")
    compile files("libs/EnderIO-1.7.10-2.3.0.424_beta.jar")
    compile files("libs/forestry_1.7.10-4.2.15.63.jar")
    compile files("libs/AppleCore-mc1.7.10-1.3.1.jar")
    compile files("libs/industrialcraft-2-2.2.828-experimental-reactor-fix.jar")
    compile files("libs/CodeChickenLib-1.7.10-1.1.3.138-universal.jar")
    compile files("libs/TConstruct-1.7.10-1.8.9.12-GTNH.jar")
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	exclude '**/Thumbs.db'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {

    }
}

artifacts {
    archives devJar
}